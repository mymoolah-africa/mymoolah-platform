{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MyMoolah Documentation","text":""},{"location":"CHANGELOG/","title":"Changelog","text":""},{"location":"CONTRIBUTING/","title":"Contributing","text":""},{"location":"SECURITY/","title":"Security","text":""},{"location":"openapi/","title":"API Reference","text":"<ul> <li>View the OpenAPI YAML</li> </ul>"},{"location":"requirements/","title":"Requirements","text":"<pre><code># MyMoolah Platform Requirements\n\n## Project Overview\nMyMoolah is a cloud-native, Mojaloop-inspired banking and wallet platform for Africa, designed for cost efficiency, scalability, and compliance with international banking standards.\n\n---\n\n## Business &amp; Technical Goals\n\n- Serve B2B clients and enable them to manage prefunded float accounts for millions of end users.\n- Support low-income individuals in Africa with affordable, accessible digital financial services.\n- Integrate with multiple VAS and payment service providers (e.g., DT Mercury for PayShap, Mobilemart, Flash).\n- Provide a secure, auditable, and compliant platform for all transactions.\n- Modular Node.js/Express backend with MySQL (Google Cloud SQL).\n- RESTful API, documented with OpenAPI/Swagger.\n- KYC onboarding for B2B and B2C (document upload, approval workflow).\n- Voucher system for secure generation, distribution, and redemption.\n- Real-time transaction processing (1000+ TPS target).\n- Scalable, cloud-native deployment (Google Cloud, Codespaces for dev).\n- Security: PCI DSS compliance, OAuth2/JWT, encryption, audit logging.\n\n---\n\n## Account Types &amp; Requirements\n\n### Client Accounts (B2B)\n- Onboarding, KYC, compliance.\n- Float account management (ZAR, multi-currency future).\n- Automated float notifications (80/90/95%).\n- Secure client portal for reporting.\n- Each client can have millions of customers, each with an internal wallet managed by the client.\n- Compliance, security, auditability.\n\n### Service Provider Accounts\n- Modular API integration (e.g., DT Mercury for PayShap, Mobilemart, Flash).\n- Float management, notifications, KYC, compliance.\n- Transaction journey, pricing/on-selling, reporting, VAT handling, security, audit.\n\n### User Accounts (B2C)\n- KYC (SA ID or passport), document upload, proof of address.\n- Funding via EFT, PayShap, vouchers.\n- Voucher system, transaction history, reporting.\n- Mobile number as account number, unique backend ID.\n- Security, simplicity.\n\n### Internal/Operational Accounts\n- System float, fee collection, VAT holding, suspense/settlement.\n- Full transaction history, audit trail, reconciliation, segregation of funds.\n\n### Agent/Merchant/API Accounts (Future)\n- For field agents, merchants, and third-party integrations.\n- KYC, float/commission management, POS/e-commerce support.\n\n---\n\n## API &amp; Data Model\n\n- **Implemented Endpoints:**\n  - `POST /api/v1/users/register` (user registration, validation, hashing, duplicate check)\n- **Planned Endpoints:**\n  - Wallet funding, transaction history, voucher management, KYC upload, authentication, VAS integrations, notifications, support tickets.\n- **Data Model:**\n  - Robust ERD with tables for clients, users, wallets, transactions, vouchers, KYC, VAT, audit logs, notifications, support tickets.\n\n---\n\n## Backend Implementation Status (as of July 2024)\n\n- User registration API (`/api/v1/users/register`) is implemented with validation, password hashing, and MySQL integration.\n- `server.js` is configured with CORS, error handling, and user route registration.\n- Environment variables in `.env` manage database credentials securely.\n- Documentation portal is live at [https://mymoolah-africa.github.io/mymoolah-platform/](https://mymoolah-africa.github.io/mymoolah-platform/).\n- OpenAPI spec (`openapi.yaml`) is included for API reference and can be viewed in Swagger Editor or Redoc.\n- **Note:** The documentation site is static and separate from the backend API, which runs locally or in Codespaces.\n\n---\n\n## Configuration &amp; Environment Files\n\n- `.env`: Stores environment variables for database credentials and other secrets.\n- `config/db.js`: Sets up the MySQL connection pool using environment variables.\n- `server.js`: Main entry point for the backend server, configures middleware, routes, and error handling.\n- `routes/users.js`: Handles user registration and related API endpoints.\n\n---\n\n## Git Workflow: Moving Folders/Files from Local Development to GitHub\n\n**Best Practice:**\n- Always copy your new or updated files/folders into your local clone of the GitHub repo (not directly into the remote via the web interface).\n- Use git to track, commit, and push your changes. This ensures version control, collaboration, and triggers any automations (like documentation deployment).\n\n**Step-by-Step Instructions:**\n\n1. **Copy your files/folders into your local repo directory.**\n   - Example: Drag and drop, or use the `cp` command in your terminal.\n\n2. **Check the status of your repo:**\n   ```bash\n   git status\n   ```\n   - This shows new, modified, or deleted files/folders.\n\n3. **Stage your changes:**\n   - To add everything (recommended):\n     ```bash\n     git add .\n     ```\n   - To add a specific folder:\n     ```bash\n     git add path/to/your-folder\n     ```\n   - To add a specific file:\n     ```bash\n     git add path/to/your-file\n     ```\n\n4. **Commit your changes:**\n   ```bash\n   git commit -m \"Add/update files and folders from local development\"\n   ```\n\n5. **Push to GitHub:**\n   ```bash\n   git push\n   ```\n\n6. **Check your repo on GitHub** to confirm the changes are there.\n\n**Notes:**\n- Git will track all files inside folders you add, except those listed in `.gitignore`.\n- If you delete a folder locally and run `git add .`, Git will stage the deletion as well.\n- Use `git status` to review what will be added, modified, or deleted before you commit.\n\n---\n\n</code></pre> <p>Copy and paste this into your <code>docs/requirements.md</code> file, save, and redeploy your docs. Let me know when you\u2019re ready for the next file, or if you want a custom version for your needs!</p>"},{"location":"session-summary/","title":"Session Summary","text":""}]}